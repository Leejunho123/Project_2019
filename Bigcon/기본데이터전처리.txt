#필요한 패키지 가져오기
install.packages("data.table")
library(data.table)

###항공데이터전처리###
#AFSNT.csv 가져오기
data<-read.csv(file.choose(),header=T)
#결항을 제거하기
data2<-subset(data,data$CNL=='N')
#20분보다 일찍 출발한 비행기는 조기출발편 혹은 페리편으로 간주하여 제거하기
data3<-subset(data2,data2$DLYTime2>(-20))
#변인 제외하기(FLO, FLT, REG, IRR, ATT, DRR, CNL, CNR)
data4<-data3[,c(2,3,4,5,6,10,14,19,20,21)]
#범주형 변수를 숫자 범주로 변환하기
dataX<-matrix(0,nrow=nrow(data4),ncol=ncol(data4))
for(j in c(3:6)){
AC=levels(data4[,j])
for(i in 1:length(AC)){
AD=which(data4[,j]==AC[i])
dataX[AD,j]=i}
}
AC=levels(data4[,7])
for(i in 1:length(AC)){
AD=which(data4[,7]==AC[i])
dataX[AD,7]=i-1
}
dataX2<-as.data.frame(dataX)
dataX2[,1]<-data4[,1]
dataX2[,2]<-data4[,2]
dataX2[,8]<-data4[,8]
dataX2[,9]<-data4[,9]
dataX2[,10]<-data4[,10]

#A.csv로 저장하기
write.csv(dataX2,"") 

###기상데이터전처리 및 항공데이터와 합치기###
#기상데이터 결측치는 엑셀에서 필터를 활용하여 보간하였다.(기상데이터 추출 및 결측치 대체에 대한 방법은 결과보고서를 참조)
#데이터 추출, 결측치 보간이 된 기상데이터를 사용하였다.
#항공데이터에서 변수명을 지정하고 순서를 V1,V2,V3,V4,V5,V6,V7,V8로 맞춘다.(변수명 및 순서는 추가제출한 한글파일을 참조)
#항공데이터에 기상데이터를 엑셀함수를 이용하여 합쳤다.
#1.방금 R에서 저장한 A.csv를 연다.
#2.A.csv에서 새로운 시트를 열어 하나의 공항(ex. ARP1)의 기상데이터를 붙여넣는다.
#3.새로운 시트에 있는 기상데이터에서 2017년 평균기온 전체를 선택하여 INDEX를 평균기온으로 지정한다.
#4.새로운 시트에 있는 기상데이터에서 2018년 평균기온 전체를 선택하여 INDEX를 평균기온2으로 지정한다.
#5.새로운 시트에 있는 기상데이터에서 2019년 평균기온 전체를 선택하여 INDEX를 평균기온3으로 지정한다.
#6.항공데이터에서 하나의 공항(ex. ARP1)에 필터를 넣는다.
#7.=IF(A__=1,INDEX(평균기온,B__+1,C__+1),IF(A__=2,INDEX(평균기온2,B__+1,C__+1),INDEX(평균기온3,B__+1,C__+1)))을 이용하여 평균기온을 붙인다.(__에는 공항에 필터를 사용했을 때 나타나는 첫 번째 행의 번호를 넣는다.)
#8.위를 반복하여 기상데이터(W1,W2,W3)와 항공데이터(V1,V2,V3,V4,V5,V6,V7,V8)을 합쳐 data2.csv로 저장한다.(data2.csv는 분석에 사용할 데이터)

#방금 저장한 data2.csv 가져오기
K<-read.csv(file.choose(),header=T)
K2<-subset(K,K$V5!=5)
K3<-subset(K2,K2$V5!=6)

###항공기상데이터전처리 및 기상데이터, 항공데이터와 합치기###
#일별항공기상자료.csv를 가져오기
data<-read.csv(file.choose(),header=F)
for (i in 1:length(data[,1])){
Year<-data[i,2]%/%10000
Month<-data[i,2]%%10000%/%100
Day<-data[i,2]%%10000%%100
ARP<-data[i,1]
K3[K3$V3==Day&K3$V5==ARP,14]<-data3[i,3]
K3[K3$V3==Day&K3$V5==ARP,15]<-data3[i,4]
K3[K3$V3==Day&K3$V5==ARP,16]<-data3[i,5]
K3[K3$V3==Day&K3$V5==ARP,17]<-data3[i,6]
K3[K3$V3==Day&K3$V5==ARP,18]<-data3[i,7]
K3[K3$V3==Day&K3$V5==ARP,19]<-data3[i,8]
K3[K3$V3==Day&K3$V5==ARP,20]<-data3[i,9]
K3[K3$V3==Day&K3$V5==ARP,21]<-data3[i,10]
K3[K3$V3==Day&K3$V5==ARP,22]<-data3[i,11]
K3[K3$V3==Day&K3$V5==ARP,23]<-data3[i,12]
K3[K3$V3==Day&K3$V5==ARP,24]<-data3[i,13]
K3[K3$V3==Day&K3$V5==ARP,25]<-data3[i,14]
}
#data1.csv로 저장(data1.csv는 분석에 사용할 데이터)
write.csv(K3,"")
